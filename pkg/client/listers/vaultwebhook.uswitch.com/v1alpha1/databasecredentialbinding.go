// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/uswitch/vault-webhook/pkg/apis/vaultwebhook.uswitch.com/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DatabaseCredentialBindingLister helps list DatabaseCredentialBindings.
type DatabaseCredentialBindingLister interface {
	// List lists all DatabaseCredentialBindings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DatabaseCredentialBinding, err error)
	// DatabaseCredentialBindings returns an object that can list and get DatabaseCredentialBindings.
	DatabaseCredentialBindings(namespace string) DatabaseCredentialBindingNamespaceLister
	DatabaseCredentialBindingListerExpansion
}

// databaseCredentialBindingLister implements the DatabaseCredentialBindingLister interface.
type databaseCredentialBindingLister struct {
	indexer cache.Indexer
}

// NewDatabaseCredentialBindingLister returns a new DatabaseCredentialBindingLister.
func NewDatabaseCredentialBindingLister(indexer cache.Indexer) DatabaseCredentialBindingLister {
	return &databaseCredentialBindingLister{indexer: indexer}
}

// List lists all DatabaseCredentialBindings in the indexer.
func (s *databaseCredentialBindingLister) List(selector labels.Selector) (ret []*v1alpha1.DatabaseCredentialBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DatabaseCredentialBinding))
	})
	return ret, err
}

// DatabaseCredentialBindings returns an object that can list and get DatabaseCredentialBindings.
func (s *databaseCredentialBindingLister) DatabaseCredentialBindings(namespace string) DatabaseCredentialBindingNamespaceLister {
	return databaseCredentialBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DatabaseCredentialBindingNamespaceLister helps list and get DatabaseCredentialBindings.
type DatabaseCredentialBindingNamespaceLister interface {
	// List lists all DatabaseCredentialBindings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.DatabaseCredentialBinding, err error)
	// Get retrieves the DatabaseCredentialBinding from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.DatabaseCredentialBinding, error)
	DatabaseCredentialBindingNamespaceListerExpansion
}

// databaseCredentialBindingNamespaceLister implements the DatabaseCredentialBindingNamespaceLister
// interface.
type databaseCredentialBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DatabaseCredentialBindings in the indexer for a given namespace.
func (s databaseCredentialBindingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DatabaseCredentialBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DatabaseCredentialBinding))
	})
	return ret, err
}

// Get retrieves the DatabaseCredentialBinding from the indexer for a given namespace and name.
func (s databaseCredentialBindingNamespaceLister) Get(name string) (*v1alpha1.DatabaseCredentialBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("databasecredentialbinding"), name)
	}
	return obj.(*v1alpha1.DatabaseCredentialBinding), nil
}
